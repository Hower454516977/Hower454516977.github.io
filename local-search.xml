<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>人生中第一次面试</title>
    <link href="/2022/05/24/%E4%BA%BA%E7%94%9F%E4%B8%AD%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95/"/>
    <url>/2022/05/24/%E4%BA%BA%E7%94%9F%E4%B8%AD%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>5.20的事拖到了今天才来写😉<br>梦回高中互问理综，第一次面试给了最好的面试官，感谢宇航哥的面试😗<br>加油，前端人😄</p><h2 id="基础知识">基础知识</h2><h3 id="计算机网络">计算机网络</h3><h4 id="HTTP协议"><a href="https://vue3js.cn/interview/http/HTTP_HTTPS.html">HTTP协议</a></h4><h4 id="HTTP1-0-1-1-2-0-的区别"><a href="https://vue3js.cn/interview/http/1.0_1.1_2.0.html">HTTP1.0/1.1/2.0 的区别</a></h4><h4 id="TCP的三次握手"><a href="https://vue3js.cn/interview/http/handshakes_waves.html">TCP的三次握手</a></h4><h4 id="网络安全">网络安全</h4><h3 id="CSS">CSS</h3><h4 id="position"><a href="https://www.runoob.com/css/css-positioning.html">position</a></h4><p>默认 static<br>absolute、relative、fixed、sticky</p><h4 id="flex"><a href="https://vue3js.cn/interview/css/flexbox.html">flex</a></h4><h4 id="元素居中的方法"><a href="https://vue3js.cn/interview/css/center.html">元素居中的方法</a></h4><h3 id="JavaScript">JavaScript</h3><h4 id="数据类型"><a href="https://vue3js.cn/interview/JavaScript/data_type.html">数据类型</a></h4><h4 id="防抖节流"><a href="https://vue3js.cn/interview/JavaScript/debounce_throttle.html">防抖节流</a></h4><h4 id="Promise"><a href="https://www.runoob.com/js/js-promise.html">Promise</a></h4><h4 id="事件循环"><a href="https://vue3js.cn/interview/JavaScript/event_loop.html">事件循环</a></h4><h4 id="0-1-0-2-0-3"><a href="https://vue3js.cn/interview/JavaScript/loss_accuracy.html">0.1+0.2=0.3?</a></h4><h4 id="TS"><a href="https://vue3js.cn/interview/typescript/typescript_javascript.html">TS</a></h4><h4 id="原型链"><a href="https://vue3js.cn/interview/JavaScript/prototype.html">原型链</a></h4><h4 id="map和forEach的区别"><a href="https://vue3js.cn/interview/JavaScript/array_api.html#%E5%9B%9B%E3%80%81%E8%BF%AD%E4%BB%A3%E6%96%B9%E6%B3%95">map和forEach的区别</a></h4><h3 id="React">React</h3><h4 id="钩子用过哪些"><a href="https://vue3js.cn/interview/React/React%20Hooks.html">钩子用过哪些</a></h4><h4 id="组件通信"><a href="https://vue3js.cn/interview/React/communication.html">组件通信</a></h4><h4 id="引入CSS的方式"><a href="https://vue3js.cn/interview/React/import%20css.html">引入CSS的方式</a></h4><h3 id="工程化">工程化</h3><h4 id="Webpack"><a href="https://vue3js.cn/interview/webpack/webpack.html">Webpack</a></h4><h2 id="算法">算法</h2><h4 id="两数之和">两数之和</h4><p>哈希表<br>set() has() get()<br><a href="https://leetcode.cn/problems/two-sum/">leetcode 1.两数之和</a></p><h4 id="有效的括号">有效的括号</h4><p>栈<br><a href="https://leetcode.cn/problems/valid-parentheses/">leetcode 20.有效的括号</a></p><h4 id="反转链表">反转链表</h4><p>链表<br><a href="https://leetcode.cn/problems/reverse-linked-list/">leetcode 206.反转链表</a></p><h4 id="用-setTimeout-实现-setInterval">用 setTimeout 实现 setInterval</h4><p><a href="https://zhuanlan.zhihu.com/p/87595858#:~:text=%E7%94%A8%20setTimeout%20%E5%AE%9E%E7%8E%B0%20setInterval%20%E8%80%8C%20setTimeout%20%E5%8F%AF%E4%BB%A5%E5%AE%9E%E7%8E%B0%20setInterval,%7D%20%E4%B8%8A%E9%9D%A2%E7%9A%84%20repeat%20%E6%8E%A5%E5%8F%97%E4%B8%A4%E4%B8%AA%E5%8F%82%E6%95%B0%EF%BC%8C%20func%20%E6%98%AF%E8%A6%81%E4%BB%A5%E9%97%B4%E9%9A%94%E6%97%B6%E9%97%B4%E6%89%A7%E8%A1%8C%E7%9A%84%E5%87%BD%E6%95%B0%EF%BC%8C%20ms%20%E4%BB%A3%E8%A1%A8%E9%97%B4%E9%9A%94%E7%9A%84%E6%AF%AB%E7%A7%92%E6%95%B0%E3%80%82">链接</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">mySetInterval</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">timeID</span> = <span class="hljs-literal">null</span><br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">func</span> = <span class="hljs-literal">null</span><br>&#125;<br><br>mySetInterval.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">repeat</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">func, ms</span>) &#123;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">func</span> === <span class="hljs-literal">null</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">func</span> = func<br>  &#125;<br><br>  <span class="hljs-comment">// 确保一个 Timer 实例只能重复一个 func</span><br>  <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">func</span> !== func) &#123;<br>    <span class="hljs-keyword">return</span><br>  &#125;<br><br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">timeID</span> = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-title function_">func</span>()<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">repeat</span>(func, ms)<br>  &#125;, ms)<br>&#125;<br><br>mySetInterval.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">clear</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-built_in">clearTimeout</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">timeID</span>)<br>&#125;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">a</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;a&#x27;</span>)<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">b</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;b&#x27;</span>)<br><br><span class="hljs-keyword">const</span> timer = <span class="hljs-keyword">new</span> <span class="hljs-title function_">mySetInterval</span>()<br><br>timer.<span class="hljs-title function_">repeat</span>(a, <span class="hljs-number">1000</span>)<br>timer.<span class="hljs-title function_">repeat</span>(b, <span class="hljs-number">1000</span>) <span class="hljs-comment">// 不会定时执行 b</span><br></code></pre></td></tr></table></figure><h2 id="总结">总结</h2><p>这次面下来的感觉就是感觉自己很恶心，好多简单的知识点，甚至做过的算法题，竟然能够一片空白💔<br>深深地意识到基础知识太薄弱了，如果秋招想冲大厂，将来的几个月一定要改变自己好好努力了⚡<br>清楚了都有哪些内容要去学习，接下来就是要把一个个比较难理解的知识搞清楚，加油！💪</p>]]></content>
    
    
    <categories>
      
      <category>面试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用三大件实现“贪吃蛇”小游戏</title>
    <link href="/2022/05/17/%E7%94%A8%E4%B8%89%E5%A4%A7%E4%BB%B6%E5%AE%9E%E7%8E%B0%E2%80%9C%E8%B4%AA%E5%90%83%E8%9B%87%E2%80%9D%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    <url>/2022/05/17/%E7%94%A8%E4%B8%89%E5%A4%A7%E4%BB%B6%E5%AE%9E%E7%8E%B0%E2%80%9C%E8%B4%AA%E5%90%83%E8%9B%87%E2%80%9D%E5%B0%8F%E6%B8%B8%E6%88%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="前言-v2">前言</h2><p>作为一个前端小白，在b站学习完pink老师讲的动画原理之后，我脑中就有了写一个小游戏的想法。然后发现贪吃蛇好像还挺好实现的，然后就动手开始试着写了一下。</p><h2 id="实现过程">实现过程</h2><h3 id="用-HTML-和-CSS-构建场景和物件">用 HTML 和 CSS 构建场景和物件</h3><h4 id="HTML-部分">HTML 部分</h4><p>我的做法就是让整个页面由div标签构成，场地是个div，目标物是个div，蛇头和蛇身都是由一个个的div构成。我加入了障碍物的设定，就是每过一段时间就会在地图上生成一个障碍物。所有的蛇身会被放入类名为allBody的div中，所有的障碍物会被放入类名为allBarrier的div中。<br>完整 HTML 代码如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Snake<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./snake.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;wall&quot;</span>&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;remind&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ground&quot;</span>&gt;</span> <br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;target&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;head&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;allBody&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;allBarrier&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./snake.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="CSS-部分">CSS 部分</h4><p>墙，就是除了整个页面除去内部场地的部分，所以给墙加上绝对定位，给提示和场地加上相对定位。而其他部分在场地内，加上绝对定位。<br>完整 CSS 代码如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.wall</span> &#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">background-color</span>: greenyellow;<br>&#125;<br><br><span class="hljs-selector-class">.remind</span> &#123;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0px</span>;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0px</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">background-color</span>: pink;<br>&#125;<br><br><span class="hljs-selector-class">.ground</span> &#123;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">background-color</span>: white;<br>&#125;<br><br><span class="hljs-selector-class">.head</span> &#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">background-color</span>: blue;<br>&#125;<br><br><span class="hljs-selector-class">.body</span> &#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">background-color</span>: aquamarine;<br>&#125;<br><br><span class="hljs-selector-class">.barrier</span> &#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">background-color</span>: gray;<br>&#125;<br><br><span class="hljs-selector-class">.target</span> &#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;<br>  <span class="hljs-attribute">background-color</span>: red;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="用-JavaScript-控制各种功能的实现">用 JavaScript 控制各种功能的实现</h3><h4 id="声明">声明</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//获取对应的div</span><br><span class="hljs-type">let</span> <span class="hljs-variable">wall</span> <span class="hljs-operator">=</span> document.querySelector(<span class="hljs-string">&#x27;.wall&#x27;</span>);<br><span class="hljs-type">let</span> <span class="hljs-variable">remind</span> <span class="hljs-operator">=</span> document.querySelector(<span class="hljs-string">&#x27;.remind&#x27;</span>);<br><span class="hljs-type">let</span> <span class="hljs-variable">ground</span> <span class="hljs-operator">=</span> document.querySelector(<span class="hljs-string">&#x27;.ground&#x27;</span>);<br><span class="hljs-type">let</span> <span class="hljs-variable">target</span> <span class="hljs-operator">=</span> document.querySelector(<span class="hljs-string">&#x27;.target&#x27;</span>);<br><span class="hljs-type">let</span> <span class="hljs-variable">head</span> <span class="hljs-operator">=</span> document.querySelector(<span class="hljs-string">&#x27;.head&#x27;</span>);<br><span class="hljs-type">let</span> <span class="hljs-variable">allBody</span> <span class="hljs-operator">=</span> document.querySelector(<span class="hljs-string">&#x27;.allBody&#x27;</span>);<br><span class="hljs-type">let</span> <span class="hljs-variable">allBarrier</span> <span class="hljs-operator">=</span> document.querySelector(<span class="hljs-string">&#x27;.allBarrier&#x27;</span>);<br><span class="hljs-comment">//通过createElement的方式实现newBody和newBarrier的生成</span><br><span class="hljs-type">let</span> <span class="hljs-variable">newBody</span> <span class="hljs-operator">=</span> document.createElement(<span class="hljs-string">&#x27;div&#x27;</span>);<br><span class="hljs-type">let</span> <span class="hljs-variable">newBarrier</span> <span class="hljs-operator">=</span> document.createElement(<span class="hljs-string">&#x27;div&#x27;</span>);<br><span class="hljs-comment">//将所有蛇身和障碍物选取来进行操作</span><br><span class="hljs-type">let</span> <span class="hljs-variable">body</span> <span class="hljs-operator">=</span> allBody.querySelectorAll(<span class="hljs-string">&#x27;.body&#x27;</span>);<br><span class="hljs-type">let</span> <span class="hljs-variable">barrier</span> <span class="hljs-operator">=</span> allBarrier.querySelectorAll(<span class="hljs-string">&#x27;.barrier&#x27;</span>);<br><span class="hljs-comment">//头，身，目标物，障碍物的位置</span><br><span class="hljs-type">let</span> <span class="hljs-variable">headX</span> <span class="hljs-operator">=</span> randomX();<br><span class="hljs-type">let</span> <span class="hljs-variable">headY</span> <span class="hljs-operator">=</span> randomY();<br><span class="hljs-type">let</span> <span class="hljs-variable">bodyX</span> <span class="hljs-operator">=</span> head.offsetLeft;<br><span class="hljs-type">let</span> <span class="hljs-variable">bodyY</span> <span class="hljs-operator">=</span> head.offsetTop;<br><span class="hljs-type">let</span> <span class="hljs-variable">targetX</span> <span class="hljs-operator">=</span> randomX();<br><span class="hljs-type">let</span> <span class="hljs-variable">targetY</span> <span class="hljs-operator">=</span> randomY();<br><span class="hljs-type">let</span> <span class="hljs-variable">barrierX</span> <span class="hljs-operator">=</span> randomX();<br><span class="hljs-type">let</span> <span class="hljs-variable">barrierY</span> <span class="hljs-operator">=</span> randomY();<br><span class="hljs-comment">//用来记录数据(吃到的个数和使用的时间)，通过公式得出评分</span><br><span class="hljs-type">let</span> <span class="hljs-variable">time</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><span class="hljs-type">let</span> <span class="hljs-variable">times</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><span class="hljs-type">let</span> <span class="hljs-variable">score</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><span class="hljs-comment">//用来控制按下按钮，即开始游戏后才开始计时</span><br><span class="hljs-type">let</span> <span class="hljs-variable">flag</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>;<br><span class="hljs-comment">//用来控制有蛇身时，不能直接往反方向走</span><br><span class="hljs-type">let</span> <span class="hljs-variable">turnUp</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>;<br><span class="hljs-type">let</span> <span class="hljs-variable">turnLeft</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>;<br><span class="hljs-type">let</span> <span class="hljs-variable">turnDown</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>;<br><span class="hljs-type">let</span> <span class="hljs-variable">turnRight</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>;<br><span class="hljs-type">let</span> <span class="hljs-variable">single</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span>;<br></code></pre></td></tr></table></figure><h4 id="随机生成函数得到随机值">随机生成函数得到随机值</h4><p>随机获取 a~b 之间的一个整数：Math.round(Math.random() * ( b - a ) + a);<br>我们要生成是从场所内出现并且间隔为50的随机值</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-comment">//随机函数</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">randomX</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">return</span> Math.<span class="hljs-built_in">round</span>(Math.<span class="hljs-built_in">random</span>() * (wall.offsetWidth / <span class="hljs-number">50</span> - <span class="hljs-number">4</span>) + <span class="hljs-number">1</span>) * <span class="hljs-number">50</span>;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">randomY</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">return</span> Math.<span class="hljs-built_in">round</span>(Math.<span class="hljs-built_in">random</span>() * (wall.offsetHeight / <span class="hljs-number">50</span> - <span class="hljs-number">4</span>) + <span class="hljs-number">1</span>) * <span class="hljs-number">50</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="蛇头的生成和控制">蛇头的生成和控制</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//生成函数</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">setHead</span>(<span class="hljs-params"></span>) &#123;<br>  headX = <span class="hljs-title function_">randomX</span>();<br>  headY = <span class="hljs-title function_">randomY</span>();<br>  head.<span class="hljs-property">style</span>.<span class="hljs-property">left</span> = headX + <span class="hljs-string">&#x27;px&#x27;</span>;<br>  head.<span class="hljs-property">style</span>.<span class="hljs-property">top</span> = headY + <span class="hljs-string">&#x27;px&#x27;</span>;<br>&#125;<br><br><span class="hljs-comment">//控制函数：</span><br><span class="hljs-comment">//当接收到键盘指令后进行go函数</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">go</span>(<span class="hljs-params">dir</span>) &#123;<br>  <span class="hljs-title function_">turn</span>(dir);<br>  <span class="hljs-built_in">clearInterval</span>(head.<span class="hljs-property">timer</span>);<br>  <span class="hljs-title function_">judge</span>(dir);<br>  head.<span class="hljs-property">timer</span> = <span class="hljs-built_in">setInterval</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title function_">judge</span>(dir);<br>  &#125;, <span class="hljs-number">100</span>);<br>&#125;<br><span class="hljs-comment">//判断方向来控制蛇头的方向</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">judge</span>(<span class="hljs-params">dir</span>) &#123;<br>  body = allBody.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;.body&#x27;</span>);<br>  barrier = allBarrier.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;.barrier&#x27;</span>);<br>  <span class="hljs-title function_">followHead</span>();<br>  <span class="hljs-keyword">switch</span> (dir) &#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;up&#x27;</span>: head.<span class="hljs-property">style</span>.<span class="hljs-property">top</span> = head.<span class="hljs-property">offsetTop</span> - <span class="hljs-number">50</span> + <span class="hljs-string">&#x27;px&#x27;</span>; <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;left&#x27;</span>: head.<span class="hljs-property">style</span>.<span class="hljs-property">left</span> = head.<span class="hljs-property">offsetLeft</span> - <span class="hljs-number">50</span> + <span class="hljs-string">&#x27;px&#x27;</span>; <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;down&#x27;</span>: head.<span class="hljs-property">style</span>.<span class="hljs-property">top</span> = head.<span class="hljs-property">offsetTop</span> + <span class="hljs-number">50</span> + <span class="hljs-string">&#x27;px&#x27;</span>; <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;right&#x27;</span>: head.<span class="hljs-property">style</span>.<span class="hljs-property">left</span> = head.<span class="hljs-property">offsetLeft</span> + <span class="hljs-number">50</span> + <span class="hljs-string">&#x27;px&#x27;</span>; <span class="hljs-keyword">break</span>;<br>  &#125;<br>  <span class="hljs-title function_">isGetTarget</span>(dir);<br>  <span class="hljs-title function_">isDead</span>(dir);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="障碍物的生成">障碍物的生成</h4><p>在满足不会生成到蛇身、目标物和蛇头附近200px位置的情况下生成障碍物</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">function setBarrier() &#123;<br>  newBarrier = document.createElement(<span class="hljs-string">&#x27;div&#x27;</span>);<br>  allBarrier.appendChild(newBarrier);<br>  newBarrier.classList.<span class="hljs-keyword">add(&#x27;barrier&#x27;);</span><br><span class="hljs-keyword"></span>  <span class="hljs-keyword">barrierX </span>= randomX();<br>  <span class="hljs-keyword">barrierY </span>= randomY();<br>  for (let i = <span class="hljs-number">0</span><span class="hljs-comment">; i &lt; body.length; i++) &#123;</span><br>    <span class="hljs-keyword">body </span>= allBody.querySelectorAll(<span class="hljs-string">&#x27;.body&#x27;</span>);<br>    for (let <span class="hljs-keyword">j </span>= <span class="hljs-number">0</span><span class="hljs-comment">; j &lt; barrier.length; j++) &#123;</span><br>      <span class="hljs-keyword">barrier </span>= allBarrier.querySelectorAll(<span class="hljs-string">&#x27;.barrier&#x27;</span>);<br>      if (<span class="hljs-keyword">barrierX </span>=== <span class="hljs-keyword">body[i].offsetLeft </span>&amp;&amp; <span class="hljs-keyword">barrierY </span>=== <span class="hljs-keyword">body[i].offsetTop </span><span class="hljs-title">||</span><br>        <span class="hljs-keyword">barrierX </span>=== <span class="hljs-keyword">barrier[j].offsetLeft </span>&amp;&amp; <span class="hljs-keyword">barrierY </span>=== <span class="hljs-keyword">barrier[j].offsetTop </span><span class="hljs-title">||</span><br>        Math.abs((<span class="hljs-keyword">barrierX </span>- head.offsetLeft)) &lt; <span class="hljs-number">200</span> <span class="hljs-title">||</span><br>        Math.abs((<span class="hljs-keyword">barrierX </span>- head.offsetLeft)) &lt; <span class="hljs-number">200</span> <span class="hljs-title">||</span><br>        <span class="hljs-keyword">barrierX </span>=== target.offsetLeft &amp;&amp; <span class="hljs-keyword">barrierY </span>=== target.offsetTop) &#123;<br>        <span class="hljs-keyword">barrierX </span>= randomX();<br>        <span class="hljs-keyword">barrierY </span>= randomY();<br>        i = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">j </span>= <span class="hljs-number">0</span>;<br>      &#125;<br>    &#125;<br>  &#125;<br>  newBarrier.style.left = <span class="hljs-keyword">barrierX </span>+ <span class="hljs-string">&#x27;px&#x27;</span>;<br>  newBarrier.style.top = <span class="hljs-keyword">barrierY </span>+ <span class="hljs-string">&#x27;px&#x27;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="目标物的生成及被吃到后的重置">目标物的生成及被吃到后的重置</h4><p>在满足不会生成到蛇身、障碍物位置的情况下生成目标物</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-keyword">function</span> set<span class="hljs-constructor">Target()</span> &#123;<br>  targetX = random<span class="hljs-constructor">X()</span>;<br>  targetY = random<span class="hljs-constructor">Y()</span>;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; body.length; i++) &#123;<br>    body = allBody.query<span class="hljs-constructor">SelectorAll(&#x27;.<span class="hljs-params">body</span>&#x27;)</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; barrier.length; j++) &#123;<br>      barrier = allBarrier.query<span class="hljs-constructor">SelectorAll(&#x27;.<span class="hljs-params">barrier</span>&#x27;)</span>;<br>      <span class="hljs-keyword">if</span> (targetX<span class="hljs-operator"> === </span>body<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>.offsetLeft<span class="hljs-operator"> &amp;&amp; </span>targetY<span class="hljs-operator"> === </span>body<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>.offsetTop<span class="hljs-operator"> ||</span><br><span class="hljs-operator">        </span>targetX<span class="hljs-operator"> === </span>barrier<span class="hljs-literal">[<span class="hljs-identifier">j</span>]</span>.offsetLeft<span class="hljs-operator"> &amp;&amp; </span>targetY<span class="hljs-operator"> === </span>barrier<span class="hljs-literal">[<span class="hljs-identifier">j</span>]</span>.offsetTop) &#123;<br>        targetX = random<span class="hljs-constructor">X()</span>;<br>        targetY = random<span class="hljs-constructor">Y()</span>;<br>        i = <span class="hljs-number">0</span>;<br>        j = <span class="hljs-number">0</span>;<br>      &#125;<br>    &#125;<br>  &#125;<br>  target.style.left = targetX + &#x27;px&#x27;;<br>  target.style.top = targetY + &#x27;px&#x27;;<br>&#125;<br><br><span class="hljs-keyword">function</span> is<span class="hljs-constructor">GetTarget(<span class="hljs-params">dir</span>)</span> &#123;<br>  <span class="hljs-keyword">if</span> (targetX<span class="hljs-operator"> === </span>head.offsetLeft<span class="hljs-operator"> &amp;&amp; </span>targetY<span class="hljs-operator"> === </span>head.offsetTop) &#123;<br>    single = <span class="hljs-literal">false</span>; <span class="hljs-comment">//吃到过目标物后，拥有蛇身，之后不能瞬间反向</span><br>    times++;<br>    set<span class="hljs-constructor">Target()</span>;<br>    set<span class="hljs-constructor">Body(<span class="hljs-params">dir</span>)</span>;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="吃到目标物后蛇身的增长">吃到目标物后蛇身的增长</h4><p>吃到目标物时根据此时的方向来决定新蛇身的位置</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs haxe"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setBody</span></span>(dir) &#123;<br>  <span class="hljs-keyword">new</span><span class="hljs-type">Body</span> = document.createElement(<span class="hljs-string">&#x27;div&#x27;</span>);<br>  allBody.appendChild(<span class="hljs-keyword">new</span><span class="hljs-type">Body</span>);<br>  <span class="hljs-keyword">new</span><span class="hljs-type">Body</span>.classList.add(<span class="hljs-string">&#x27;body&#x27;</span>);<br>  <span class="hljs-keyword">if</span> (dir === <span class="hljs-string">&#x27;left&#x27;</span>) &#123;<br>    <span class="hljs-keyword">new</span><span class="hljs-type">Body</span>.style.left = head.offsetLeft + <span class="hljs-number">50</span> + <span class="hljs-string">&#x27;px&#x27;</span>;<br>    <span class="hljs-keyword">new</span><span class="hljs-type">Body</span>.style.top = head.offsetTop + <span class="hljs-string">&#x27;px&#x27;</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span> (dir === <span class="hljs-string">&#x27;right&#x27;</span>) &#123;<br>    <span class="hljs-keyword">new</span><span class="hljs-type">Body</span>.style.left = head.offsetLeft - <span class="hljs-number">50</span> + <span class="hljs-string">&#x27;px&#x27;</span>;<br>    <span class="hljs-keyword">new</span><span class="hljs-type">Body</span>.style.top = head.offsetTop + <span class="hljs-string">&#x27;px&#x27;</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span> (dir === <span class="hljs-string">&#x27;up&#x27;</span>) &#123;<br>    <span class="hljs-keyword">new</span><span class="hljs-type">Body</span>.style.left = head.offsetLeft + <span class="hljs-string">&#x27;px&#x27;</span>;<br>    <span class="hljs-keyword">new</span><span class="hljs-type">Body</span>.style.top = head.offsetTop + <span class="hljs-number">50</span> + <span class="hljs-string">&#x27;px&#x27;</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span> (dir === <span class="hljs-string">&#x27;down&#x27;</span>) &#123;<br>    <span class="hljs-keyword">new</span><span class="hljs-type">Body</span>.style.left = head.offsetLeft + <span class="hljs-string">&#x27;px&#x27;</span>;<br>    <span class="hljs-keyword">new</span><span class="hljs-type">Body</span>.style.top = head.offsetTop - <span class="hljs-number">50</span> + <span class="hljs-string">&#x27;px&#x27;</span>;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="控制蛇身跟着蛇头走">控制蛇身跟着蛇头走</h4><p>核心代码，通过这种方式来控制蛇身的走动</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ada"><span class="hljs-keyword">function</span> <span class="hljs-title">followHead</span>() &#123;<br>  body = allBody.querySelectorAll(&#x27;.body&#x27;);<br>  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">body</span>.length !== <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-keyword">for</span> (let i = <span class="hljs-keyword">body</span>.length - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i<span class="hljs-comment">--) &#123;</span><br>      <span class="hljs-keyword">if</span> (i === <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">body</span>[i].style.left = head.offsetLeft + <span class="hljs-symbol">&#x27;px</span>&#x27;;<br>        <span class="hljs-keyword">body</span>[i].style.top = head.offsetTop + <span class="hljs-symbol">&#x27;px</span>&#x27;;<br>      &#125;<br>      <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">body</span>[i].style.left = <span class="hljs-keyword">body</span>[i - <span class="hljs-number">1</span>].offsetLeft + <span class="hljs-symbol">&#x27;px</span>&#x27;;<br>        <span class="hljs-keyword">body</span>[i].style.top = <span class="hljs-keyword">body</span>[i - <span class="hljs-number">1</span>].offsetTop + <span class="hljs-symbol">&#x27;px</span>&#x27;;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="判断是否死亡">判断是否死亡</h4><p>三种死亡情况：撞墙死、撞身死和撞障碍物死</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">isDead</span>(<span class="hljs-params">dir</span>) &#123;<br>  <span class="hljs-comment">//撞墙死</span><br>  <span class="hljs-keyword">switch</span> (dir) &#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;up&#x27;</span>: <span class="hljs-keyword">if</span> (head.<span class="hljs-property">offsetTop</span> &lt; <span class="hljs-number">0</span>) <span class="hljs-title function_">gameOver</span>(); <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;left&#x27;</span>: <span class="hljs-keyword">if</span> (head.<span class="hljs-property">offsetLeft</span> &lt; <span class="hljs-number">0</span>) <span class="hljs-title function_">gameOver</span>(); <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;down&#x27;</span>: <span class="hljs-keyword">if</span> (head.<span class="hljs-property">offsetTop</span> &gt; ground.<span class="hljs-property">offsetHeight</span>) <span class="hljs-title function_">gameOver</span>(); <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;right&#x27;</span>: <span class="hljs-keyword">if</span> (head.<span class="hljs-property">offsetLeft</span> &gt; ground.<span class="hljs-property">offsetWidth</span>) <span class="hljs-title function_">gameOver</span>(); <span class="hljs-keyword">break</span>;<br>  &#125;<br>  <span class="hljs-comment">//撞身死</span><br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; body.<span class="hljs-property">length</span>; i++) &#123;<br>    <span class="hljs-keyword">if</span> (body[i].<span class="hljs-property">offsetLeft</span> === head.<span class="hljs-property">offsetLeft</span> &amp;&amp;<br>      body[i].<span class="hljs-property">offsetTop</span> === head.<span class="hljs-property">offsetTop</span>)<br>      <span class="hljs-title function_">gameOver</span>();<br>  &#125;<br>  <span class="hljs-comment">//撞障碍物死</span><br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; barrier.<span class="hljs-property">length</span>; j++) &#123;<br>    <span class="hljs-keyword">if</span> (barrier[j].<span class="hljs-property">offsetLeft</span> === head.<span class="hljs-property">offsetLeft</span> &amp;&amp;<br>      barrier[j].<span class="hljs-property">offsetTop</span> === head.<span class="hljs-property">offsetTop</span>)<br>      <span class="hljs-title function_">gameOver</span>();<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="死亡后的结算和重启">死亡后的结算和重启</h4><p>这是我的计分公式：score = Math.round(times * 3.5 * (1 + 2 / (time + 1)))<br>欢迎提出更合理的计分公式</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sqf">function gameOver() &#123;<br>  clearInterval(head.timer);<br>  <span class="hljs-built_in">score</span> = Math.<span class="hljs-built_in">round</span>(times * <span class="hljs-number">3.5</span> * (<span class="hljs-number">1</span> + <span class="hljs-number">2</span> / (<span class="hljs-built_in">time</span> + <span class="hljs-number">1</span>)));<br>  <span class="hljs-keyword">if</span> (<span class="hljs-built_in">score</span> &gt; <span class="hljs-number">100</span>) <span class="hljs-built_in">score</span> = <span class="hljs-number">100</span>;<br>  alert(<span class="hljs-string">&#x27;本次你坚持了&#x27;</span> + <span class="hljs-built_in">time</span> + <span class="hljs-string">&#x27;秒，吃到了&#x27;</span> + times + <span class="hljs-string">&#x27;次红方块，</span><br><span class="hljs-string">  系统评分为&#x27;</span> + <span class="hljs-built_in">score</span> + <span class="hljs-string">&#x27;分，再来一次吧~&#x27;</span>);<br>  setHead();<br>  setTarget();<br>  window.location.<span class="hljs-built_in">reload</span>();<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="如何控制有蛇身时，不能直接往反方向走">如何控制有蛇身时，不能直接往反方向走</h4><p>排己思想，先将所有方向都设置为false，然后将选定方向的反方向设为false</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">turn</span><span class="hljs-params">(dir)</span> &#123;<br>  turnUp = <span class="hljs-literal">true</span>;<br>  turnLeft = <span class="hljs-literal">true</span>;<br>  turnDown = <span class="hljs-literal">true</span>;<br>  turnRight = <span class="hljs-literal">true</span>;<br>  <span class="hljs-keyword">switch</span> (dir) &#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;up&#x27;</span>: turnDown = <span class="hljs-literal">false</span>; <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;left&#x27;</span>: turnRight = <span class="hljs-literal">false</span>; <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;down&#x27;</span>: turnUp = <span class="hljs-literal">false</span>; <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;right&#x27;</span>: turnLeft = <span class="hljs-literal">false</span>; <span class="hljs-keyword">break</span>;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="其他">其他</h4><p>document.addEventListener(‘keydown’, function (e) {…})<br>和remind.addEventListener(‘click’, function () {alert(‘…’);})就不贴出来啦</p><p>完整的 JavaScript 的代码可以去<a href="https://github.com/Hower454516977/Snake"> 我的 Github </a>取。</p><h2 id="总结-v2">总结</h2><p>对于一个初学者来说，能自己通过思考，结合之前学过的知识来完成一个小游戏，还是蛮有成就感的事情啊。如果有初学者也想自己动手写一下这个小游戏的话，可以参考我的思路来试着完成。我的代码肯定还有很多需要优化的地方，恳请大佬们提出意见和指导 QWQ</p>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小游戏</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
